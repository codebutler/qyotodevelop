s2q=$(subst \ ,?,$1)
q2s=$(subst ?,\ ,$1)
# use this when result will be quoted
unesc2=$(subst ?, ,$1)

# install assembly
pkglibdir = $(prefix)/lib/monodevelop/AddIns/
pkglib_SCRIPTS = $(ASSEMBLY) $(ASSEMBLY).mdb

# install .pc files
linuxpkgconfigdir = @libdir@/pkgconfig
linuxpkgconfig_DATA = $(LINUX_PKGCONFIG)

# install bin wrapper
bin_SCRIPTS = $(BINARIES)

build_sources = $(FILES) $(GENERATED_FILES)

build_resources_embed = $(foreach res,$(RESOURCES), $(addprefix -resource:,$(res)))

build_references_ref = $(call q2s,$(foreach ref, $(call s2q,$(REFERENCES)), $(if $(filter -pkg:%, $(ref)), $(ref), $(if $(filter -r:%, $(ref)), $(ref), -r:$(ref)))))
build_references_ref += $(call q2s,$(foreach ref, $(call s2q,$(DLL_REFERENCES)), -r:$(ref)))
build_references_ref += $(call q2s,$(foreach ref, $(call s2q,$(PROJECT_REFERENCES)), -r:$(ref)))

CLEANFILES = $(ASSEMBLY) $(ASSEMBLY).mdb $(PROGRAMFILES) $(LINUX_PKGCONFIG)
DISTCLEANFILES = $(GENERATED_FILES)

# macros

# $(call emit-deploy-target,deploy-variable-name)
define emit-deploy-target
$($1): $($1_SOURCE)
	mkdir -p '$$(shell dirname '$$@')'
	cp '$$<' '$$@'
endef
 
# $(call emit-deploy-wrapper,wrapper-variable-name,wrapper-sourcefile,x)
# assumes that for a wrapper foo.pc its source template is foo.pc.in
# if $3 is non-empty then wrapper is marked exec
define emit-deploy-wrapper
$($1): $2
	mkdir -p '$$(shell dirname '$$@')'
	cp '$$<' '$$@'
	$(if $3,chmod +x '$$@')
endef
